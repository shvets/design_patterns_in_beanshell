// domain-function.bsh
// better than visitor 
// http://blogs.concedere.net:8080/blog/discipline/java/?permalink=Domain-Function-Pattern.html

class Employee {
  private String type;
  private String name;

  public Employee(String type, String name) {
    this.type = type;
    this.name = name;
  }

  public String getType() {
    return type;
  }

  public String toString() {
    return name;
  }
}


public abstract class EmployeeDomainFunction {
  public abstract void call(Employee e);
}

class VacationPlanner extends EmployeeDomainFunction {
  public void call(Employee e) {
    String type = e.getType();

    if (type.equals("contractor")) {
      System.out.println("Vacation planning for Contractor: " + 0);
    }
    else if (type.equals("executive")) {
      System.out.println("Vacation planning for Executive: " + 90);
    }
    else if (type.equals("manager")) {
      System.out.println("Vacation planning for Manager: " + 45);
    }
    else if (type.equals("secretary")) {
      System.out.println("Vacation planning for Secretary: " + 15);
    }
    else if (type.equals("engineer")) {
      System.out.println("Vacation planning for Engineer: " + 10);
    }
    else {
      throw new IllegalArgumentException("unknown employee type: " + e.getType());
    }
  }
}


VacationPlanner vacationPlanner = new VacationPlanner();

Employee[] employees = new Employee[] {
  new Employee("contractor", "contractor 1"),
  new Employee("contractor", "contractor 2"),
  new Employee("executive", "executive 1"),
  new Employee("manager", "manager 1"),
  new Employee("secretary", "secretary 1"),
  new Employee("engineer", "engineer 1"),
  new Employee("engineer", "engineer 2")
};

System.out.println("employees: " + Arrays.asList(employees));

System.out.println("Vacation planning:");

for(int i=0; i < employees.length; i++) {
  vacationPlanner.call(employees[i]);
} 

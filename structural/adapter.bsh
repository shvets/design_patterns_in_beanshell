// adapter.bsh

// Converst the interface of a class into another intrerface clients expect.
// Lets classes work together that couldn't otherwise because of incompatible interfaces.

// 1. existing layout

interface ClientItem {
  void someOperation();
}

class MyClientItem implements ClientItem {
  public void someOperation() {
    System.out.println("some operation");
  }
}

class Client {  
  public void process(ClientItem item) {
    item.someOperation();
  }
}

// 2. class that creates conflict (adaptee): we cannot pass type in client's process() method.

class OtherItem {
  public otherOperation() {
    System.out.println("other operation");
  }
}

// 3. adaptation

class ClientItemAdapter implements ClientItem {
  private OtherItem otherItem = new OtherItem();

  // actual adaptation
  public void someOperation() { 
    otherItem.otherOperation();
  }
}

// 4. test

Client client = new Client();

client.process(new MyClientItem());

client.process(new ClientItemAdapter());
